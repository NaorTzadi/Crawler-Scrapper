package org.example;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;
public class SeleniumScrapper extends WebScrapper {
    public static WebScrapperDataBase getAllScrapedInfo(String url){
        return new WebScrapperDataBase(url,getContentType(url),getImageUrls(url),getVideoUrls(url),FileLinksExtractor.getAllDownloadLinks(url),null);
    }
    public static HashMap<String, Integer> getKeyWordAmountOfOccurrences(String url, HashMap<String, Integer> wordAppearanceCount) {
        ChromeDriver chromeDriver = Utility.getModifiedChromeDriver();
        chromeDriver.get(url);
        String pageText = chromeDriver.findElement(By.tagName("body")).getText().toLowerCase();
        chromeDriver.quit();

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("Choose a keyword to search for (press 0 to go back):");
            String keyword = scanner.nextLine().toLowerCase().trim();
            if (keyword.equals("0")) break;
            int count = countOccurrences(pageText, keyword);
            if (count > 0) {
                System.out.println("The keyword '" + keyword + "' was found " + count + " times.");
                wordAppearanceCount.put(keyword, count);
            } else {
                System.out.println("The keyword '" + keyword + "' was not found!");
            }
        }
        return wordAppearanceCount;
    }
    public static ArrayList<String> getImageUrls(String url) {
        ChromeDriver chromeDriver = Utility.getModifiedChromeDriver();
        chromeDriver.get(url);
        List<WebElement> imageElements = chromeDriver.findElements(By.tagName("img"));
        ArrayList<String> imageUrls = new ArrayList<>();
        for (WebElement imageElement : imageElements) {
            String imageSrc = imageElement.getAttribute("src");
            if (imageSrc != null && !imageSrc.isEmpty()) {
                imageUrls.add(imageSrc);
            }
        }
        chromeDriver.quit();
        return imageUrls;
    }
    public static ArrayList<String> getVideoUrls(String url){
        ChromeDriver chromeDriver= Utility.getModifiedChromeDriver();
        chromeDriver.get(url);
        List<WebElement> videoElements = chromeDriver.findElements(By.tagName("video"));
        ArrayList<String> videoUrls = new ArrayList<>();
        for (WebElement videoElement : videoElements) {
            String videoSrc = videoElement.getAttribute("src");
            if (videoSrc != null && !videoSrc.isEmpty()) {
                videoUrls.add(videoSrc);
            }
            List<WebElement> sourceElements = videoElement.findElements(By.tagName("source"));
            for (WebElement sourceElement : sourceElements) {
                String sourceSrc = sourceElement.getAttribute("src");
                if (sourceSrc != null && !sourceSrc.isEmpty()) {
                    videoUrls.add(sourceSrc);
                }
            }
        }
        chromeDriver.quit();
        return videoUrls;
    }

}
