package org.example;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;  // This should be from Jsoup
import org.jsoup.select.Elements;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

public class WebScrapper {

    public static WebScrapperDataBase getScrappedInfo(String url){
        WebScrapperDataBase webScrapperDataBase=new WebScrapperDataBase(url,null);
        HashMap<String,Integer> keyWordAppearanceCount=new HashMap<>();

        return webScrapperDataBase;
    }

    private static List<String> getImageLinksFromUrl(String url) {
        List<String> imageLinks = new ArrayList<>();
        try {
            Document doc = Jsoup.connect(url).get(); // Connect to the URL and parse its HTML

            Elements imageElements = doc.select("img[src]"); // Select all image elements with src attribute

            for (Element img : imageElements) {
                String imgSrc = img.attr("abs:src"); // Extract absolute URL of the image
                if (!imgSrc.isEmpty()) {
                    imageLinks.add(imgSrc);
                }
            }
        } catch (Exception e) {System.err.println("Error fetching image links from " + url + ": " + e.getMessage());}
        return imageLinks;
    }

    public static void searchByKeyWord() {
        Scanner scanner=new Scanner(System.in);
        System.out.println("you can press 0 at anytime to go back.");
        System.out.println("choose a url:");
        String url=scanner.nextLine();
        if(url.equals("0")){return;}
        if(!isValidURL(url)){System.out.println("invalid url!");System.out.println();searchByKeyWord();}
        System.out.println("choose a key word to search for:");
        String decision=scanner.nextLine();
        if(decision.equals("0")){return;}
        try {
            Document document = Jsoup.connect(url).get();
            String text = document.text();
            if(!text.contains(decision)){
                System.out.println("The keyword '" + decision + "' was found " + countOccurrences(text, decision) + " times.");
            }
        } catch (IOException e) {
            System.err.println("Error fetching URL: " + e.getMessage());
        }
    }
    private static int countOccurrences(String text, String keyWord) {
        String[] words = text.split("\\s+"); // Split text into words
        int count = 0;
        for (String word : words) {
            if (word.equalsIgnoreCase(keyWord)) {
                count++;
            }
        }
        return count;
    }
    public static boolean isValidURL(String input) {try {new URL(input);return true;} catch (MalformedURLException e) {return false;}}
}
