package org.example;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.io.IOException;
import java.util.*;
public class WebScrapper {
    public static WebScrapperDataBase getScrappedInfo(String url){
        WebScrapperDataBase webScrapperDataBase=new WebScrapperDataBase(url,null);
        HashMap<String,Integer> keyWordAppearanceCount=new HashMap<>();

        Utility.isConnected();
        Utility.isAccessAllowed(url);


        return webScrapperDataBase;
    }
    public static ArrayList<String> getVideoUrls() {
        String url = Utility.promptUrl();
        if (url.equals("0")) {return null;} else if (url.equals("-1")) {return getVideoUrls();}
        ArrayList<String> videoUrls = new ArrayList<>();
        try {
            Document doc = Jsoup.connect(url).userAgent(Utility.getRandomUserAgent()).execute().parse();
            Elements videoElements = doc.select("video");
            boolean videosFound = false;
            for (Element video : videoElements) {
                String videoSrc = video.attr("src");
                if (!videoSrc.isEmpty()) {
                    System.out.println("Found video URL: " + videoSrc);
                    videoUrls.add(videoSrc);
                    videosFound = true;
                }
                Elements sourceElements = video.select("source"); // Check for video sources inside <source> tags
                for (Element source : sourceElements) {
                    String sourceSrc = source.attr("src");
                    if (!sourceSrc.isEmpty()) {
                        System.out.println("Found video source URL: " + sourceSrc);
                        videoUrls.add(sourceSrc);
                        videosFound = true;
                    }
                }
            }
            if (!videosFound) {System.out.println("No videos found on the webpage.");}
        } catch (IOException e) {System.err.println("Error fetching page: " + e.getMessage());}
        return videoUrls;
    }
    public static List<String> getImageUrls() {
        String url = Utility.promptUrl();
        if (url.equals("0")) {return null;} else if (url.equals("-1")) {return getImageUrls();}
        List<String> imageLinks = new ArrayList<>();
        try {
            Document doc = Jsoup.connect(url).userAgent(Utility.getRandomUserAgent()).execute().parse();
            Elements imageElements = doc.select("img[src]"); // Select all image elements with src attribute
            for (Element img : imageElements) {
                String imgSrc = img.attr("abs:src"); // Extract absolute URL of the image
                if (!imgSrc.isEmpty()) {
                    imageLinks.add(imgSrc);
                    System.out.print(" " + imgSrc + ",");
                }
            }
        } catch (Exception e) {
            System.err.println("Error fetching image links from " + url + ": " + e.getMessage());
        }
        return imageLinks;
    }

    public static void getKeyWordAmountOfOccurrences() {
        Scanner scanner=new Scanner(System.in);
        String url=Utility.promptUrl();
        if (url.equals("0")){return;}else if (url.equals("-1")){
            getKeyWordAmountOfOccurrences();return;}
        System.out.println("choose a key word to search for:");
        String keyWord=scanner.nextLine();
        if(keyWord.equals("0")){return;}
        try {
            Document doc = Jsoup.connect(url).userAgent(Utility.getRandomUserAgent()).execute().parse();
            String fullText = doc.text();
            String titleText = doc.title();
            String textWithoutTitle = fullText.replace(titleText, "");
            if (!textWithoutTitle.contains(keyWord)) {
                System.out.println("The keyword '" + keyWord + "' was found " + Utility.countOccurrences(textWithoutTitle.toLowerCase(), keyWord.toLowerCase()) + " times.");
            }
        } catch (IOException e) {
            System.err.println("Error fetching URL: " + e.getMessage());
        }
    }


}
